// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaxCentre.Server.Data;

#nullable disable

namespace VaxCentre.Server.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240506151416_recreatedb")]
    partial class recreatedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VaccineVaccineCentre", b =>
                {
                    b.Property<int>("AvailableInId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinesId")
                        .HasColumnType("int");

                    b.HasKey("AvailableInId", "VaccinesId");

                    b.HasIndex("VaccinesId");

                    b.ToTable("VaccineVaccineCentre");
                });

            modelBuilder.Entity("VaxCentre.Server.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VaxCentre.Server.Models.VaccinationReciept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dose1State")
                        .HasColumnType("int");

                    b.Property<int>("Dose2State")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineCentreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VaccineDose1Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VaccineDose2Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccineCentreId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinationReciepts");
                });

            modelBuilder.Entity("VaxCentre.Server.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("GapTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Precaution")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("VaxCentre.Server.Models.Admin", b =>
                {
                    b.HasBaseType("VaxCentre.Server.Models.Account");

                    b.Property<string>("EmpName")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("VaxCentre.Server.Models.Patient", b =>
                {
                    b.HasBaseType("VaxCentre.Server.Models.Account");

                    b.Property<int>("AcceptState")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("SSID")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Patient");
                });

            modelBuilder.Entity("VaxCentre.Server.Models.VaccineCentre", b =>
                {
                    b.HasBaseType("VaxCentre.Server.Models.Account");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.ToTable("Accounts", t =>
                        {
                            t.Property("Address")
                                .HasColumnName("VaccineCentre_Address");
                        });

                    b.HasDiscriminator().HasValue("VaccineCentre");
                });

            modelBuilder.Entity("VaccineVaccineCentre", b =>
                {
                    b.HasOne("VaxCentre.Server.Models.VaccineCentre", null)
                        .WithMany()
                        .HasForeignKey("AvailableInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaxCentre.Server.Models.Vaccine", null)
                        .WithMany()
                        .HasForeignKey("VaccinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VaxCentre.Server.Models.VaccinationReciept", b =>
                {
                    b.HasOne("VaxCentre.Server.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("VaxCentre.Server.Models.VaccineCentre", "VaccineCentre")
                        .WithMany()
                        .HasForeignKey("VaccineCentreId");

                    b.HasOne("VaxCentre.Server.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId");

                    b.Navigation("Patient");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccineCentre");
                });
#pragma warning restore 612, 618
        }
    }
}
